#!/bin/bash
set -eufo pipefail

CONFIG_ORDER='multi_monitor only_hdmi only_dsub notebook_monitor'
DISPLAY=':0.0'

MONITOR_NOTEBOOK=
MONITOR_DSUB=
MONITOR_HDMI=
MONITOR_DP1=
MONITOR_DP2=


######
# Configurations
#
function config_no_monitor()
{
    for output in "${MONITOR_NOTEBOOK}" "${MONITOR_DP1}" "${MONITOR_DP2}"; do
        xrandr --output "${output}" --auto \
            && xrandr --output "${output}" --off \
            || true
    done
}

function config_notebook_monitor()
{
    strict_xrandr \
        --output "${MONITOR_NOTEBOOK}" --crtc 0 --mode 1920x1080  --rotate normal --primary \
        || return $?
    echo "${MONITOR_NOTEBOOK}"
}

function config_only_dsub()
{
    strict_xrandr \
        --output "${MONITOR_DSUB}" --crtc 0 --mode 1920x1080  --rotate normal --primary \
        || return $?
    echo "${MONITOR_DSUB}"
}

function config_only_hdmi()
{
    strict_xrandr \
        --output "${MONITOR_HDMI}" --crtc 0 --mode 1920x1080  --rotate normal --primary \
        || return $?
    echo "${MONITOR_HDMI}"
}

function config_first_external_monitor()
{
    strict_xrandr \
        --output "${MONITOR_NOTEBOOK}" --off \
        --output "${MONITOR_DP1}" --crtc 1 --mode 1920x1080 --rotate normal --primary \
        --output "${MONITOR_DP2}" --off \
        || return $?
    echo "${MONITOR_DP1}"
}

function config_multi_monitor()
{
    strict_xrandr \
        --output "${MONITOR_NOTEBOOK}" --off \
        --output "${MONITOR_DP1}" --crtc 1 --mode 1920x1080 --rotate normal --primary \
        --output "${MONITOR_DP2}" --crtc 2 --mode 1920x1080 --rotate normal --right-of "${MONITOR_DP1}" \
        || return $?
    echo "${MONITOR_DP1}"
}

function config_multi_monitor_3()
{
    strict_xrandr \
        --output "${MONITOR_NOTEBOOK}" --crtc 0 --mode 1600x900  --rotate normal --left-of "${MONITOR_DP1}" \
        --output "${MONITOR_DP1}" --crtc 1 --mode 1920x1080 --rotate normal --primary \
        --output "${MONITOR_DP2}" --crtc 2 --mode 1920x1080 --rotate normal --right-of "${MONITOR_DP1}" \
        || return $?
    echo "${MONITOR_DP1}"
}


######
# Functions
#
function main()
{
    identify_outputs \
        MONITOR_NOTEBOOK 'eDP.*' \
        MONITOR_DP1 'DP(|-|-1-)3-1' \
        MONITOR_DP2 'DP(|-|-1-)3-2' \
        MONITOR_HDMI 'HDMI1'
        #MONITOR_DSUB 'DP(|-|-1-)1-4' \

    local without_reset=0
    local config_list="${CONFIG_ORDER}"

    while (( $# > 0 ))
    do
        case "$1" in
            --without-reset)
                without_reset=1
                ;;
            --config)
                shift
                config_list="$1"
        esac
        shift
    done

    if (( without_reset == 0 )); then
        config_no_monitor
    fi

    set +e
    for name in ${config_list}
    do
        primary="$(config_${name})"
        if [ $? -eq 0 ]
        then
            set_output_of_onscreen_elements "${primary}"
            echo 'Done'
            exit 0
        fi
    done

    echo 'Error: Can not meet configs with current available monitors'
    exit 1
}

function strict_xrandr()
{
    out="$(xrandr --dryrun "$@" 2>&1)" || return $?
    if echo "${out}" | grep -q '^warning:' >/dev/null
    then
        return 1
    fi

    xrandr "$@"
}

function get_outputs()
{
    strict_xrandr | grep -E '^[^ ]* (|dis)connected' | cut -d' ' -f1
}

function identify_outputs()
{
    local outputs
    local output

    outputs="$(get_outputs)"
    while (( $# > 0 ))
    do
        output="$(echo "${outputs}" | grep -Ex "$2" | head -n1 || true)"
        export $1="${output}"
        shift 2
    done
}

function panel_output()
{
    local panel_id="$1"; shift

    xfconf-query -c xfce4-panel -p "/panels/panel-${panel_id}/output-name" "$@"
}

function reload_conky()
{
    killall -SIGUSR1 conky
}

function reset_brightness()
{
    xbacklight -set 40
}

function set_output_of_onscreen_elements()
{
    local output="$1"

    current_output="$(panel_output 0)"
    [ "${current_output}" == "${output}" ] && return

    # Waiting for display ready
    sleep 2

    reset_brightness

    #panel_output 0 -n -t string -s "${output}"
    panel_output 0 -n -t string -s 'monitor-0'
    sleep 1
    xfce4-panel --restart

    # Waiting for desktop ready
    sleep 2

    reload_conky
}


main "$@"
